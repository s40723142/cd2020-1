var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n \n 40723110個人倉儲 :\xa0 https://github.com/s40723110/cd2020 \n 40723110個人網頁 :\xa0 https://s40723110.github.io/cd2020/content/index.html \n cd2020ag3小組倉儲 :\xa0 https://github.com/s40723110/cd2020ag3 \n cd2020ag3小組網頁 :\xa0 https://s40723110.github.io/cd2020ag3/content/index.html', 'tags': '', 'url': 'About.html'}, {'title': 'python 3.8.2', 'text': '', 'tags': '', 'url': 'python 3.8.2.html'}, {'title': 'basic Win10 portable programming', 'text': '在你的可攜下創建一個data子目錄\xa0 :\xa0\xa0 \n \n --everything-is-local\xa0 \xa0 \n https://git-scm.com/download/win \xa0 \xa0 \xa0 \xa0 \xa0 \n 要用git指令要有portablegit 。data下子目錄存取為portablegit(需與啟動檔配合)。 \n start.bat (參考) : \n \n . \n .. \n ... \n ================================================================= \n \n https://www.python.org/downloads/ \n 選取需要的版本(EX : 3.8.2)\xa0 \n 點取執行檔 Windows x86-64 executable installer \n data下子目錄 存取的名稱要跟執行檔相配合(EX : py38) \n \n . \n .. \n ... \n ================================================================= \n \n \n \n \n \n Download Scintilla and SciTE \n \n \n \n 編輯器(用來創建start.bat , stop.bat) https://www.scintilla.org/SciTEDownload.html \n 解開檔案為wscite \n 通過打開SciTE.exe\xa0 \\ Option \\ Open Global Options File \n 找到code.page的部分 , 把code.page=0給註記掉 , 並把code.page=65001取消註記 \n \n \n start.bat\xa0 : \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n\n%Disk%:\n\nset HomePath=%Disk%:\\home_mdecourse\nset HomeDrive=%Disk%:\\home_mdecourse\nset Home=%Disk%:\\home_mdecourse\nset USERPROFILE=%Disk%:\\home_mdecourse\n\nREM for putty\nset GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe\n\nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n\nset PYTHONPATH=%Disk%:\\py38\\DLLs;%Disk%:\\py38\\Lib;%Disk%:\\py38\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py38\n\nset path_python=%Disk%:\\py38;%Disk%:\\py38\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nREM coreutils is for compiling fossil scm\nset path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64;\nset path_tcc=%Disk%:\\tcc;\nset path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin;\nset path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_xming=%Disk%:\\Xming;\nset path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32;\n\npath=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;\n\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n\nstart /MIN %Disk%:\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite\\SciTE.exe\n\nExit \n \n stop.bat \n @echo off\nset Disk=y\npath=%PATH%;\n\ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM node.exe /F\ntaskkill /IM Range.exe /F\ntaskkill /IM SciTE.exe /F\nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\nEXIT \n - \n 假使要快速比較修改前後 :，可使用一個工具 :\xa0 \n \xa0 KDiff3 - Home \n http://kdiff3.sourceforge.net/ \n \n \n 可即時看到檔案間的差別 \n 也可以用來比較 Tiny C Compiler\xa0\xa0 \n https://directory.fsf.org/wiki/Tiny_C_Compiler \xa0\xa0 檔案編輯前後的差異 \n \n \n https://bellard.org/tcc/ \n . \n .. \n ... \n ================================================================ \n pip \n get-pip.py 頁面存取成data下的get-pip.py \n 再繼續用 : \n python -m pip install flask lxml bs4 flask-cors Markdown pelican leo  \n 下載網際系統相關套件 \n \n ============================================================== \n \n HxD - Freeware Hex Editor and Disk Editor \n \n \n \n \n https://mh-nexus.de/en/hxd/ \xa0 \xa0 \xa0 \n 選取該version區目前適合的版本 \n 利用 HxD 修改 pip.exe 中python.exe 的所在位置(pip.exe是存取在p38的Scripts裡) , HxD 開啟之後搜尋c:\\py38\\python.exe , 然後將滑鼠停在 c 然後輸入y:\\p37\\python.exe, 以便讓可攜系統啟動後, 可以將指令搜尋路徑設到 y:\\p38\\Scripts , 這樣就可以直接以\xa0 "pip install " 指令安裝套件. \n pip install Flask Markdown lxml bs4 flask_cors pelican leo  \n \n . \n .. \n ... \n ================================================================ \n MSYS2 installer \n MSYS2 :\xa0 https://www.msys2.org/ \n \n 接著設定start.bat \n REM 設定 msys2 64 位元的執行路徑\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\n\npath=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n . \n .. \n ... \n ================================================================= \n ShareX \n ShareX :\xa0 https://getsharex.com/ \n \n . \n .. \n ... \n ================================================================= \n Tmp (Y\\tmp : git clone .....) \n \n . \n .. \n ... \n ================================================================= \n https://github.com/flutter/flutter \n . \n .. \n ... \n ================================================================= \n Fossil \n \n https://www.fossil-scm.org/index.html/doc/trunk/www/build.wiki \n \n \n . \n .. \n ... \n ================================================================= \n putty\xa0 putty \n \n \n \xa0 \n \xa0================================================================ \n \n \n \n', 'tags': '', 'url': 'basic Win10 portable programming.html'}, {'title': 'Question', 'text': '================================================================= \n 案例1 --- 忘記git pull\xa0 \n \n ================================================================= \n 案例2. --- 沒有裝git (portablegit) \n \n ================================================================= \n 案例3 --- 檔案名跟啟動檔不相配 \n 拿portablegit當例子 :\xa0 \n 執行檔 \n \n 該資料夾 \n \n 出現已知錯誤 : \n \n ================================================================= \n 案例4 ---沒有安裝套件(pip的部分) \n \n pip install lxml \n ================================================================= \n', 'tags': '', 'url': 'Question.html'}, {'title': 'SSH', 'text': 'ssh \n \n', 'tags': '', 'url': 'SSH.html'}, {'title': 'WEEK', 'text': '', 'tags': '', 'url': 'WEEK.html'}, {'title': 'week1', 'text': '3/4 (三) \n', 'tags': '', 'url': 'week1.html'}, {'title': 'week2', 'text': '3/11 (三) \n week2進度 \n basic Win10 portable programming \n 在你的可攜下創建一個data子目錄\xa0 :\xa0\xa0 \n \n --everything-is-local\xa0 \xa0 \n https://git-scm.com/download/win \xa0 \xa0 \xa0 \xa0 \xa0 \n 要用git指令要有portablegit 。data下子目錄存取為portablegit(需與啟動檔配合)。 \n start.bat (參考) : \n \n . \n .. \n ... \n ================================================================= \n \n https://www.python.org/downloads/ \n 選取需要的版本(EX : 3.8.2)\xa0 \n 點取執行檔 Windows x86-64 executable installer \n data下子目錄存取的名稱要跟執行檔相配合(EX : py38) \n \n . \n .. \n ... \n ================================================================= \n \n \n \n \n \n Download Scintilla and SciTE \n \n \n \n 編輯器(用來創建start.bat , stop.bat) https://www.scintilla.org/SciTEDownload.html \n 解開檔案為wscite \n 通過打開SciTE.exe\xa0 \\ Option \\ Open Global Options File \n 找到code.page的部分 , 把code.page=0給註記掉 , 並把code.page=65001取消註記 \n \n \n start.bat\xa0 : \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n\n%Disk%:\n\nset HomePath=%Disk%:\\home_mdecourse\nset HomeDrive=%Disk%:\\home_mdecourse\nset Home=%Disk%:\\home_mdecourse\nset USERPROFILE=%Disk%:\\home_mdecourse\n\nREM for putty\nset GIT_HOME=%Disk%:\\portablegit\\bin\\\nset GIT_SSH=%Disk%:\\putty\\plink.exe\n\nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n\nset PYTHONPATH=%Disk%:\\py38\\DLLs;%Disk%:\\py38\\Lib;%Disk%:\\py38\\Lib\\site-packages;\nset PYTHONHOME=%Disk%:\\py38\n\nset path_python=%Disk%:\\py38;%Disk%:\\py38\\Scripts;\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\nREM coreutils is for compiling fossil scm\nset path_coreutils=%Disk%:\\coreutils-5.3.0\\bin;%Disk%:\\depends22_x64;\nset path_tcc=%Disk%:\\tcc;\nset path_cmake=%Disk%:\\cmake-3.10.1-win64-x64\\bin;\nset path_nodejs=Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm;\nset path_git=%Disk%:\\portablegit\\bin;\nset path_xming=%Disk%:\\Xming;\nset path_latex=%%Disk%:\\Pandoc;%Disk%:\\TinyTeX\\bin\\win32;\n\npath=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;\n\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n\nstart /MIN %Disk%:\\wscite\\SciTE.exe\nstart /MIN %Disk%:\\wscite\\SciTE.exe\n\nExit \n \n stop.bat \n @echo off\nset Disk=y\npath=%PATH%;\n\ntaskkill /IM python.exe /F\ntaskkill /IM pythonw.exe /F\ntaskkill /IM node.exe /F\ntaskkill /IM Range.exe /F\ntaskkill /IM SciTE.exe /F\nREM 終止虛擬硬碟與目錄的對應\nsubst %Disk%: /D\nREM 關閉 cmd 指令視窗\ntaskkill /IM cmd.exe /F\nEXIT \n - \n 假使要快速比較修改前後 :，可使用一個工具 :\xa0 \n \xa0 KDiff3 - Home \n http://kdiff3.sourceforge.net/ \n \n \n 可即時看到檔案間的差別 \n 也可以用來比較 Tiny C Compiler\xa0\xa0 \n https://directory.fsf.org/wiki/Tiny_C_Compiler \xa0 \xa0檔案編輯前後的差異 \n \n \n https://bellard.org/tcc/ \n . \n .. \n ... \n ================================================================ \n pip \n get-pip.py 頁面存取成data下的get-pip.py \n 再繼續用 : \n python -m pip install flask lxml bs4 flask-cors Markdown pelican leo  \n 下載網際系統相關套件 \n \n ============================================================== \n \n HxD - Freeware Hex Editor and Disk Editor \n \n \n \n \n https://mh-nexus.de/en/hxd/ \xa0 \xa0 \xa0 \n 選取該version區目前適合的版本 \n 利用 HxD 修改 pip.exe 中python.exe 的所在位置(pip.exe是存取在p38的Scripts裡) , HxD 開啟之後搜尋c:\\py38\\python.exe , 然後將滑鼠停在 c 然後輸入y:\\p37\\python.exe, 以便讓可攜系統啟動後, 可以將指令搜尋路徑設到 y:\\p38\\Scripts , 這樣就可以直接以\xa0"pip install " 指令安裝套件. \n pip install Flask Markdown lxml bs4 flask_cors pelican leo  \n \n . \n .. \n ... \n ================================================================ \n MSYS2 installer \n MSYS2 :\xa0 https://www.msys2.org/ \n \n 接著設定start.bat \n REM 設定 msys2 64 位元的執行路徑\nset path_msys2=%Disk%:\\msys64\\mingw64\\bin;\n\npath=%Disk%:;%path_python%;%path_git%;%path_msys2%; \n \n . \n .. \n ... \n ================================================================= \n ShareX \n ShareX :\xa0 https://getsharex.com/ \n \n . \n .. \n ... \n ================================================================= \n Tmp  (Y\\tmp : git clone .....) \n \n . \n .. \n ... \n ================================================================= \n https://github.com/flutter/flutter \n . \n .. \n ... \n ================================================================= \n Fossil \n \n https://www.fossil-scm.org/index.html/doc/trunk/www/build.wiki \n \n \n . \n .. \n ... \n ================================================================= \n putty\xa0 putty \n \n', 'tags': '', 'url': 'week2.html'}, {'title': 'week3', 'text': '3/18 (三) \n 上課筆記 \n ◇協同產品設計趨於「非同步」，非同步協同加速創新流程。 \n ◇人很容易犯錯，但電腦是精確的。 \n ◇電腦雖然精確，但不能用電「腦」解決任何事情，但凡遇到衝突時， 還是 需要人的「判斷」。 \n ◇機械產品設計之流程趨於在家即可工作，且如果還能有把多方設計者進行創新設計 \n 時所產生的衝突做到同時兼顧且不失資料的環境的話，那麼就可以實現彼此不受到干擾、方便且快速之創新。 \n ================================================================= \n Reslove confilct \n 點擊command line instruction進入下方指示列修復 \n \n 在該倉儲下暫時切換分支 : \n git checkout -b XXXXX-master master \n 再git pull 該近端 : \n git pull  https://gith ub.c om/ XXXXX /  XXXXX .git master \n 進入近端網頁修改錯誤 : \n 錯誤開始端 : <<<<<<< \n 錯誤結束處 : ======= \n 修改完錯誤後git add，git commit \n (記得切出cmsimde(分組的子分支)。) \n 切回分支 : \n git checkout master \n 合併 : \n git merge --no-ff XXXXX-master \n 推送 : \n git push origin master \n \n', 'tags': '', 'url': 'week3.html'}, {'title': 'week 4', 'text': '課堂筆記 \n 3/25 (三) \n ◇除了本身的基礎程式能力，還需要有在設計流程裡可以把自己想法呈現，並讓大眾所能理解的能力 \n ================================================================= \n ※如果用Scite開啟PIP.exe，會自動寫入二位元 \n \n . \n \n ================================================================= \n Leo setting \n \n . \n \n . \n \n leo directives reference : \n https://leoeditor.com/directives.html \n', 'tags': '', 'url': 'week 4.html'}, {'title': 'week5', 'text': 'Tomb sweeping day \n 4/1 \xa0(三) \n \n', 'tags': '', 'url': 'week5.html'}, {'title': 'week6', 'text': '4/8\xa0 (三) \n', 'tags': '', 'url': 'week6.html'}, {'title': 'OBS', 'text': 'Install OBS \n 1.\xa0 https://portableapps.com/apps/music_video/obs-studio-portable \n \xa0 \n \n \xa0 \n setting \n', 'tags': '', 'url': 'OBS.html'}, {'title': 'Google meet', 'text': 'https://meet.google.com/?authuser=1 \n \n \n . \n 右下角的「立刻進行簡報」可直接向參與會議人員展示你要展示的畫面 \n \n \n \n', 'tags': '', 'url': 'Google meet.html'}, {'title': 'Planer linkage', 'text': '', 'tags': '', 'url': 'Planer linkage.html'}, {'title': 'week 7', 'text': '4/15 \xa0(三) \n', 'tags': '', 'url': 'week 7.html'}, {'title': 'Youtube streamming live & Google meeting', 'text': 'WEEK 7 抽查 \n', 'tags': '', 'url': 'Youtube streamming live & Google meeting.html'}, {'title': 'coppeliasim', 'text': '\n \n \n \n', 'tags': '', 'url': 'coppeliasim.html'}, {'title': 'Topic 0', 'text': '', 'tags': '', 'url': 'Topic 0.html'}, {'title': 'DigitalProductCollaboration', 'text': 'DigitalProductCollaboration \n https://drive.google.com/open?id=1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc \n \n DigitalProductCollaboration \n \n Digital products are more complex today than ever before. Creating them requires multiple team members, each with their own set of skills and expertise. At Savvy, for example, our customers work closely with: a product manager, UX designer, visual designer, developer(s), content strategist, and a growth specialist. 今天，數位產品比以往任何時候都更加複雜。 產出這些產品需要多個團隊，每個團隊成員都有自己的一套技能和專業知識。 例如，在Savvy，我們的客戶與以下人員緊密合作：產品經理，UX(user experience)設計師，視覺設計師，開發人員，內容策略師和成長專家。 \n We use design collaboration to handle this complexity. Done right, design collaboration empowers each of those experts with the mindset, process, and tools to come together and build a better product faster. \n 我們使用設計協作來處理這種複雜性。 如果處理恰當，設計協作將使每位專家都擁有思維方式，過程和工具，進而團結起來，更快地構建更好的產品。 \n We wrote this resource to help other app creators adopt a collaboration culture and process. Read on to learn why design collaboration is important for creating compelling products and experiences. We\'ll also dive into the elements of a design collaboration mindset and culture, tools for effective design collaboration, and a real-world example of design collaboration at work. 我們寫這個資源是為了幫助其他應用程序創建者採用協同合作文化和流程。 繼續閱讀以了解為什麼設計協作對於創建引人注目的產品和體驗很重要。 我們還將深入探討設計協同合作思想和文化的原理，有效設計協作的工具，以及工作中設計協作的真實示例。 \n What is "Design" Collaboration? 什麼是“設計”協同合作？ \n Before we jump into it, we need to get on the same page about what design collaboration is... and is not. At its simplest, design collaboration is collaboration in a design-first environment. But, because of the nature of design, especially the design we do at Savvy, design collaboration tends to go beyond what people normally think of as collaboration. 在進入之前，我們需要在同一頁面上了解什麼是設計協同合作，甚麼不是。簡單來說，設計協同合作就是在設計優先的環境中進行協同合作。但是，由於設計的本質，尤其是我們在Savvy所做的設計，設計協同合作往往會超出人們通常認為的協同合作範圍。 \n While collaboration is generally defined as two or more people working together on the same task towards a common goal, design collaboration involves much more. 通常將協同合作定義為兩個或兩個以上的人在共同的目標上共同努力，而設計協同合作則涉及更多。 \n Design collaboration includes more people with different skillsets, tougher challenges, and bigger goals with farther-reaching impacts. 設計協同合作包括更多具有不同技能的人，更艱鉅的挑戰和影響深遠的更大目標。 \n You might think of collaboration as two people hanging a piece of art. It simply requires communication, teamwork, and four hands. Design collaboration is when a team of curators carefully design a visitor\'s experience. They select the art, choose where and how to hang it, which room it lives in (and the room\'s lighting, furniture), even the preceding rooms and the building as a whole. 您可能將協同合作視為兩個人掛在一塊藝術品上。它只需要溝通，團隊合作和四隻手。設計協同合作是指一群策畫者精心去設計顧客的體驗。他們(策畫者)選擇藝術品(兩個人)，選擇在何處以及如何懸掛藝術品，它所居住的房間（以及房間的照明，家具），甚至是先前的房間以及整個建築物。 \n Why Design Collaboration is Important 為什麼設計協作很重要 \n You can design a product without collaboration, but it takes a collaborative design process to make that product great. That\'s why design collaboration is so fundamental. 您可以在沒有協同合作的情況下設計產品，但是要通過協同合作設計過程才能使該產品變得更好。 這就是設計協同合作如此重要的原因。 \n We don\'t just build apps for our customers. Savvy builds multi-platform experiences, complex internal systems, and in some cases, entire brands and businesses. To do so, we leverage expertise across several core disciplines: strategy, design, development, and growth. Each project involves many people, each with their own skillsets and specialties. \n 我們不僅為客戶構建應用程序。 Savvy建立了多平台的體驗，複雜的內部系統，在某些情況下還建立了整個品牌和業務。 為此，我們利用跨多個核心學科的專業知識：策略，設計，開發和成長。 每個項目涉及許多人，並且每個人都有自己的技能和專長。 \n Design collaboration puts those minds together, combining their separate, specialized expertise to create solutions that tackle all aspects of a shared goal. Instead of coming at a problem from one angle, design collaboration places that problem in front of all experts, forcing them to consider new perspectives and possibilities. 設計協同合作將這些思想融合在一起，結合他們各自的專業知識，共同創建解決方案，以解決共同目標的各個方面。 設計協作不是從一個角度來解決問題，而是將這個問題擺在所有專家面前，迫使他們考慮新的觀點和可能性。 \n \xa0 For example, we involve our developers early on in the design process to make sure we\'re accounting for technical opportunities and limitations as soon as possible. This allows us to take advantage of and push our technical capabilities while eliminating costly roadblocks further in the process. It also limits how much a single person can work in a silo, keeping the work in the open and the emphasis on the user needs and product goals. 例如，我們在設計過程的早期就讓我們的開發人員參與進來，以確保我們盡快解決技術不確定因素和局限性。這使我們能夠利用並推動我們的技術能力，同時進一步消除流程中昂貴的障礙。它還限制了一個人可以在筒倉中工作的數量，從而使工作保持公開狀態，並強調用戶需求和產品目標。 \n \n Cultivating a Design Collaboration Mindset 培養設計協作心態 \n The right mindset goes a long way in establishing effective collaboration in the design process. It lays the guidelines for who collaborates, how, and to what end. 在設計過程中建立有效的協作時，正確的思維方式大有幫助。它為誰進行協作，如何合作以及為了甚麼目的奠定了指導原則。 \n COLLABORATION IS FOR EVERYONE 合作適合每個人 \n Designers sometimes think that people who are not designers are not qualified to give good feedback. But great design is more than visuals. It encompasses everything about a product, from its branding to its engineering to its growth. 設計師有時會認為不是設計師的人沒有資格提供良好的反饋。但是出色的設計不只是視覺效果。它涵蓋了產品的所有內容，從品牌到工程，再到發展。 \n Design collaboration brings in many people, each with their own perspectives and strengths. It gives everyone a voice. These fresh perspectives give designers more information. Perspectives equip designers to make the right decisions on choices that have lasting impacts on other design, development, and marketing options down the road 設計協作吸引了許多人，每個人都有自己的觀點和優勢。它給每個人一個聲音。這些新鮮的觀點為設計師提供了更多信息。前景使設計師能夠對接下來可能對其他設計，開發和營銷選擇產生持久影響的選擇做出正確的決定。 \n Collaboration with customers is as important as collaboration with other designers and team members. At Savvy, we keep our customer involved throughout the creation of their product. We take our time to explain options and have discussions with the customer to make sure we understand their thoughts. 與客戶的協作與與其他設計師和團隊成員的協作一樣重要。在Savvy，我們讓客戶參與他們產品的整個創作過程。我們花時間解釋各種選擇，並與客戶進行討論，以確保我們了解他們的想法。 \n This enables us to get buy-in from customers early on and work from clear beginnings and ends. Larger reveals aren\'t big surprises, and no one gets to the point where they\'re seeing work for the first time. 這讓我們可以及早獲得客戶的認可，並從明確的起點和終點開始工作。更大的曝光量並不是什麼大驚喜，而且沒人會在他們第一次看作品的時候就抓到重點。 \n Customer collaboration means arriving at a more defined product sooner, without costly back-stepping and unnecessary meetings. 客戶協作意味著可以更快地獲得更清晰的產品，而無需付出高昂的代價和不必要的會議。 \n It\'s easy to get caught up in your role and ignore the big picture. By involving more people earlier on, you\'re fostering closer connections with teammates and cultivating a shared responsibility and interest in the success of the product. You\'re creating a more open and transparent process, as well a more connected and invested team. 是很容易陷入自己的角色而忽略全局的。通過儘早的讓更多人參與，你可以與隊友建立更緊密的聯繫，並培養對產品的成功之共同責任和興趣。你正在創建一個更加開放、透明的流程，以及一個更緊密聯繫和投入的團隊。 \n COLLABORATION IS CONTEXTUAL 合作是脈絡性的 \n Customers come to us with complex challenges and goals. Not to mention, we continue to work with our customers for months, even years, and accumulate vast tomes of knowledge on past decisions, research, and other valuable context. 客戶向我們提出了複雜的挑戰和目標。不用說的是我們會繼續與客戶合作數月甚至數年，並在過去的決策、研究和其他有價值的背景下累積大量的知識。 \n By adopting a context-first approach, you can make sure everyone is at the highest level of knowledge. This enables them to make the most informed decisions as they work on the product. To accomplish this, we keep everyone at Savvy updated on relevant information by bringing in all team members early, documenting and recording meetings, establishing some overlap, and treating the next team member in the process like a customer. 通過採用大框架優先的方法，可以確保每個人都具有最高的知識水平。 這樣，他們就可以在產品上做出最明智的決定。 為了做到這一點，我們通過儘早召集所有團隊成員、建立文件和記錄會議，建立一些共通處，並在過程中對待下一個團隊成員像客戶一樣，使Savvy的每個人在相關資訊上都能持續更新。 \n Context is just as important on a case-by-case collaborative basis. Follow these guidelines to keep context first in collaboration: 在個案協作的基礎上，大框架也同樣重要。 請遵循以下準則以保持框架優先進行協作： \n Provide context before showing your work. Chances are if your work is on the screen while you\'re giving context, you\'ve lost your audience\'s attention. \xa0\xa0 在顯示你的工作之前提供框架(大綱)。 在提供大綱信息的情況下，如果你的工作細節出現在屏幕上，那麼你可能會失去聽眾的注意力。 \n Describe the problem you\'re trying to solve or goal you\'re trying to achieve. 描述你想要解決的問題或想達成的目標。 \n Present your work as it relates to the problem at hand. Explain your thinking and why you made certain decisions. \xa0 介紹與當前問題相關的工作。 說明你的想法以及做出某些決定的原因。 \n Be specific about what you want feedback on. 確定你要回饋的內容 。 \n \n COLLABORATION IS OPEN, HONEST, AND FEARLESS 合作是開源，誠實和無須害怕失敗的 \n It isn\'t easy to put your work (and yourself) out there. Emotions can get in the way of providing open and honest feedback, especially when you\'re worried about hurting the other person\'s feelings. 將你的工作（和你自己）放在那裡並不容易。情緒會阻礙你提供坦誠的反饋，尤其是當你擔心會傷害對方的感覺時。 \n that doesn\'t mean there\'s no place for emotion in collaboration. How something makes you feel is important in design. We think of and create solutions for people... people who are emotional, and who use emotions in their decisions. Leaving emotion out of the conversation might short-change a potential idea or solution. At best, having only a pragmatic discussion around facts and data won\'t provide the full picture. At worst, it may be a red herring or provide a false narrative. 這並不意味著在合作中沒有情感的位置。在設計中，讓你感覺如何很重要。我們為情感豐富並感情用事的人們思考並為他們創建解決方案。在對話中留下情感可能會稍微改變潛在的想法或解決方案。最好的情況下，對於事實和數據進行務實的討論時不會提供完整的信息。在最壞的情況下，它有可能變成一個幌子或者提供一個虛假的敘述。 \n At Savvy, we empower our team to be "fearless" about receiving feedback. This means letting go of any anxieties about being judged for what we create. It also means understanding that we are stronger together and stand a greater chance of creating something great. In being fearless, we better trust and empower each other to give honest and thoughtful feedback. 在Savvy，我們使我們的團隊對收到反饋“無所畏懼”。這意味著放下對我們所創造的東西進行判斷的任何焦慮。這也意味著了解我們在一起更加強大且位於一個創造美好事物的更大機會上。在無所畏懼下，我們會更好的相互信任和相互賦予能力，以提供誠實和周到的反饋。 \n Our team also believes in being fearless about providing feedback.  This means understanding the problem that needs solving as well as the customer\'s brand and goals. It also means asking lots of questions either to uncover relevant thoughts or to help guide decisions. 我們的團隊還相信不要害怕提供回饋 。這意味著要了解需要解決的問題以及客戶的品牌和目標。這也意味著問很多問題，以發現相關的思想或幫助指導決策。 \n Try presenting feedback in an exploratory and guiding manner, with the intent of building up and improving the work rather than tearing it down. 嘗試以探測性和指導性的方式提出反饋意見，目的是建立和改進工作，而不是拆散工作。 \n Your feedback should be constructive. Instead of saying you don\'t like something, frame your feedback to point back to the problem you\'re trying to help solve. Provide actionable steps on improving the work or at the very least the reasoning behind your thinking. And don\'t forget to express what you like and why. 你的反饋意見應具有建設性。與其說你不喜歡某些東西，不如表達出你的回饋以指出你需要幫助解決的問題。在改進工作上提供可行的步驟，或者至少提供你思考後的推論。並且不要忘了表達您喜歡什麼以及為什麼。 \n COLLABORATION IS MORE THAN NEW IDEAS 合作不僅僅是新的想法 \n It\'s one thing to be open and accepting of collaborative feedback, another to parse those thoughts and use them as catalysts to spark your own. This is a more advanced skill that develops over time. One way to practice this is to become a better listener. 開放並接受協同合作反饋是一回事，解析這些想法並把它們催化成你自己的想法是另一回事。隨著時間的推移，這是一項更具未來性的技能。一種實踐方法是成為更好的聽眾。 \n Often, during a conversation with others, we think more about what we are going to say next rather than what others are saying. This impacts the feedback process, especially in design, because we often know what we want to say before hearing another opinion or solution. 通常，在與他人交談時，我們會更多的考慮接下來要說的內容，而不是別人在說什麼。這會影響反饋過程，尤其是在設計裡，因為在聽到其他意見或解決方案之前，我們通常就知道我們要說甚麼。 \n When you choose to listen first and react second, it allows you to fully understand the feedback someone else is presenting and sets you up to go deeper — what is the perspective they\'re using and the place they\'re coming from? Chances are this is a perspective you didn\'t consider during the creation process. By listening to and understanding the context and reasoning behind the feedback you\'re receiving, you\'re opening yourself to more ways of looking at, thinking of, and experiencing your design. You can then test these new perspectives against the challenges, goals, and use cases you\'re designing for to see if they better suit the user. 當您選擇先聆聽然後再做出反應時，它可以讓您完全理解其他人的反饋，並讓你更深入地了解 -- 他們使用的觀點是什麼以及來自何處？很有可能這是您在創造過程中沒考慮過的觀點。通過聽取並理解所收到反饋背後的框架和推理，你正打開更多的方式來審視、思考和體驗設計。然後，您可以針對要設計的挑戰，目標和用例來測試這些新觀點，以查看它們是否更適合用戶。 \n It\'s easier to be more receptive of feedback when all collaborators practice active listening. Ultimately, the skill of giving great feedback comes from learning how to receive it. As we make an effort to be better listeners, we also find ourselves becoming more humble and, in our opinion, better designers. 當所有協作者進行積極聆聽時，更容易接受反饋。 最終，提供良好反饋的技能來自學習如何獲得反饋。 當我們努力成為更好的聽眾時，我們也發現自己變得更加謙虛，並認為我們是更好的設計師。 \n \n Finding and Using the Right Design Collaboration Tools 查找和使用正確的設計協作工具 \n The right tools go a long way in reinforcing your team\'s design collaboration mindset. In this section, you\'ll learn what to look for in collaboration tools. We also recommend tools based on our own experiences. 正確的工具在加強團隊的設計協作思維方面大有幫助。 在這個章節中，您將學習在協作工具中尋找什麼。 我們還根據自己的經驗推薦工具。 \n SELECTING THE RIGHT TOOLS 選擇合適的工具 \n Effective collaboration tools remove all barriers for collaborators to quickly and easily access and interact with the work. This keeps the focus on giving feedback. They also allow others to collaborate on a design without destroying the original. 有效的協同合作工具消除了協同工作者的所有障礙，使工作者快速且容易的存取工作並與該工具相互作用。這將專注放在提供反饋方面上。它們(工具)還允許其他人在不破壞原始設計的情況下進行協作。 \n In the past, we used relied on tools that provided basic versioning control instead of true collaborative features. For example, a designer would save a Sketch file and upload it to Dropbox. Another team member would then download it, work on it, and re-upload it. There was no easy way to make changes while the file was in another\'s hands. We tried something similar with Github, a tool that proved great for managing codebases, but not so much with iterative design work. Needless to say, these version control processes made our collaboration more time consuming, confusing, and very un-collaborative. 過去，我們曾依賴於提供基本版本控制而不是真正的協作功能的工具。例如，設計人員會保存一個Sketch文件並將其上傳到Dropbox。然後，另一個團隊成員將下載它，進行處理，然後重新上傳。當文件在另一個人手中時，沒有簡單的方法進行更改。我們使用Github嘗試了類似的方法，該工具被證明非常適合管理代碼庫，但對於反覆設計工作卻沒有太多幫助。不用說，這些版本控制過程使我們的協同合作更加耗時，混亂並且非常不合作性。 \n Now we choose from a variety of more advanced tools depending on the type of collaboration we want to achieve. 現在，我們根據要實現的協作類型從各種更高級的工具中進行選擇。 \n - FIGMA \n This is a collaboration-first, shared workspace tool. Figma works well for having multiple people in same area of the design file. You can watch teammates design or work together on the same design in real time. 這是一個協作優先，共享作業環境的工具。 Figma非常適合包含多個人在同一區域中設計文件。你可以即時查看隊友的設計或同時在同一個設計上一起工作。 \n Benefits: 好處： \n Figma reduces the ability for someone to work in a silo. Figma降低了某人在筒倉中工作的能力。 \n There\'s no need to add unnecessary polish or create static deliverables to enable collaboration. So you don\'t need to change your workflow to show off a design. 無需添加不必要的修飾或創建靜態可交付結果即可實現協作。因此，您無需更改工作流程即可展示設計。 \n It\'s easy to see and interact with the work in its native environment and apply tweaks at will. 可以輕鬆地在其本機環境中查看並與作用於工作，且隨意進行調整。 \n When to use: Flow docs, high-fidelity wireframes, spur-of-the-moment collaboration, and walking customers through a series of screens to explain and get feedback on design direction. 使用時機：流程文檔，高保真線框，即時協作，以及引導客戶瀏覽一系列屏幕，以解釋並獲得有關設計方向的反饋。 \n MARVEL \n While Figma tends to feel more free-form and flexible, Marvel allows for a more standardized form of collaboration. It also makes it easy on our customers to collaborate with us. 雖然Figma傾向於感覺更自由和靈活，但Marvel允許採用更標準化的協作形式。 這也使我們的客戶可以輕鬆地與我們合作。 \n Benefits: 好處： \n Marvel is a cleaner, more formalized and focused space, great for collaborating with non-design team members. Marvel是一個更清潔，更規範和專注的空間，非常適合與非設計團隊成員進行協作。 \n It removes all need for the customer to pay for an account or have a deep understanding of the tool to see the work. 它消除了客戶為帳戶付款或對工具進行深入了解的所有需求。 \n Customers can download screens and see them in action on a device environment via the Marvel app. 客戶可以下載屏幕，並通過Marvel應用程序在設備環境中查看它們的運行情況。 \n When to use: Presenting more finalized design work with customers and developers. (Learn about how Marvel compares with other prototyping tools.) 使用時間：與客戶和開發人員一起呈現更多最終設計工作。 （了解Marvel如何與其他原型工具進行比較。） \n \n OTHER COLLABORATION TOOLS 其他合作工具 \n Zeplin is a useful hand-off tool that allows developers to dive into the nitty gritty specs of design work. (We talk more in-depth about Zeplin here.) Zeplin是一個有用的傳遞工具，使開發人員可以深入研究設計工作的細節。 （我們在這裡更深入地討論Zeplin。） \n Quip is a great platform for brainstorming and product/process documentation. We use it to record and organize all of the context and knowledge that team members need to know when working on a project. It\'s also useful for brainstorming new ideas that aren\'t visual-focused. Quip是集思廣益和產品/過程文檔的絕佳平台。我們使用它來記錄和組織團隊成員在項目上需要了解的所有框架和知識。對於集思廣益而不是視覺關注的新想法也很有用。 \n Please note that there are many other tools out there that add similar benefits to collaboration as the ones listed above. This list represents the tools that have worked well for us in our day-to-day collaboration and is not indicative of all the options that might work well for your team. 請注意，還有許多其他工具可以為協作增加與上面列出的類似的好處。此列表代表了在我們日常合作中對我們有效的工具，但並不表示所有可能對您的團隊有效的選項。 \n Savvy\'s Design Collaboration Process in Practice Savvy在實踐中的設計合作過程 \n Now let\'s take the best practices and tools outlined above and show how they fit together in a real-life situation. We\'ll use the live drawing experience in the Press Play app to demonstrate the importance of design collaboration. This experience involved significant collaboration from a number of team members across disciplines, including a visual designer, UX designer, developer, product manager, and of course, the customer. 現在，讓我們採用上面概述的最佳實踐和工具，並展示它們如何在現實生活中融合在一起。我們將使用Press Play應用程序中的實時繪圖經驗來演示設計協作的重要性。這種經驗涉及多個學科領域的團隊成員之間的重大協作，其中包括視覺設計師，UX設計人員，開發人員，產品經理，當然還有客戶。 \n THE CONTEXT AND CHALLENGE 框架與挑戰 \n Press Play is a sweepstakes app that holds daily, weekly, and monthly drawings. Users earn tickets by watching ads and enter drawings by selecting five emojis. Winners are then rewarded based on how their choices match up with the drawing\'s randomly-selected emojis. This particular task had us creating a fun and exciting live experience for users awaiting the results of the live drawing. Press Play是一個抽獎活動應用程序，可保存每日，每周和每月的圖紙。 用戶通過觀看廣告賺取門票，並通過選擇五個表情符號輸入圖紙。 然後，根據獲獎者的選擇與繪畫中隨機選擇的表情符號匹配的方式來獎勵獲獎者。 這項特殊任務使我們為等待現場繪畫結果的用戶創造了一種有趣而激動人心的現場體驗。 \n It was important for us to create a game-like animation for this experience. We especially wanted to evoke a sense of playfulness and anticipation on the screen where users go to see how their chosen emojis match up with those from the sweepstakes drawing. 對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。 我們特別想在屏幕上喚起用戶的嬉戲感和期待感，讓用戶看到他們選擇的表情符號與抽獎活動圖上的表情符號相匹配。 \n That said, we needed to be mindful of the level of complexity an animation requires and its impact on the overall product\'s timeline and cost. Our goal was to push the level of fidelity within a reasonable time without significantly impacting the project\'s budget. 就是說，我們需要注意動畫所需的複雜程度及其對整體產品時間表和成本的影響。 我們的目標是在合理的時間內提高保真度，而又不顯著影響項目預算。 \n THE COLLABORATIVE PROCESS 合作過程 \n Stage 1: Wireframes and Brainstorming 階段1：線框和集思廣益 \n First, a Savvy UX designer created Press Play\'s overall UX and wireframes, determining what screens were needed and the timing for each one. She also put together a rough concept (shown right) for the live drawing animation, expressing initial ideas based on customer\'s needs and the project\'s established UX. 首先，一位精明的UX設計師創建了Press Play的整體UX和線框，確定需要哪些屏幕以及每個屏幕的時間安排。她還為實時繪畫動畫整理了一個粗略的概念（如右圖所示），根據客戶的需求和項目已建立的用戶體驗表達了初步的想法。 \n She presented the wireframes and the rough animation to the product manager and visual designer. Then all three met with the customer so everyone would hear the feedback directly. 她向產品經理和視覺設計師展示了線框和粗糙的動畫。然後，這三個人都與客戶會面，因此每個人都可以直接聽到反饋。 \n Stage 2: Research and Context 第二階段：研究與框架 \n The Savvy visual designer tasked with creating the actual live drawing animation came in with fresh eyes and without much prior knowledge of the Press Play product. To get up to speed, he talked in depth with the UX designer and product manager. He also dedicated additional research time to understand the overall product goals, challenges, and to familiarize himself with the work to date. As mentioned earlier, he was part of the wireframe presentation and present for the customer\'s feedback. Savvy的視覺設計師負責創建實際的實時繪畫動畫，而他們沒有看過Press Play，而且對Press Play產品沒有太多的了解。為了加快速度，他與UX設計師和產品經理進行了深入交流。他還花費額外的研究時間來了解總體產品目標，挑戰並熟悉迄今為止的工作。如前所述，他是線框展現的一部分，並向客戶提出反饋。 \n With that context, he conducted some additional research more directly related to the task at hand. In doing so, he made sure he understood the live drawing experience requirements, goals, and challenges. He looked at other apps with similar experiences and fidelity and referenced the rough animation to know what exactly the final animation needed to show (in this case, the winning emojis and the user\'s emoji selections). Before getting too tied to a solution, he met with a Savvy iOS developer to understand technical constraints and considerations. 在這種情況下，他進行了一些與手頭任務直接相關的額外研究。通過這樣做，他確保自己了解現場繪畫體驗的要求、目標和難題。他查看了具有類似體驗和保真度的其他應用，並參考了粗略的動畫以了解最終動畫到底需要顯示什麼（在這個例子下，是獲勝的表情符號和用戶的表情符號選擇）。在過於依賴解決方案之前，他會見了一位Savvy的iOS開發人員，以了解技術限制和注意事項。 \n Our visual designer and UX designer then brainstormed what was important for the visuals. They agreed that there needed to be a slow reveal to build up suspense/anticipation for the user 我們的視覺設計師和UX設計師集思廣益，思考甚麼對視覺效果至關重要。他們一致認為，需要慢慢進行透露，以便建立用戶的懸念/期待 \n Stage 3: Iteration and Feedback 階段3：共鳴和反饋 \n As our visual designer worked through a number of different directions he tapped the UX designer to chat through his progress and designs in Figma. By talking through the work they spurred more ideas and iterations while making sure they were staying true to customer expectations. With more solid options at hand, he met once again with the iOS developer to make sure everything was in line from a technical perspective. 當我們的視覺設計師依照數個不同方向工作時，他邀請了UX設計師來聊聊他在Figma中的進度和設計。 通過討論工作，他們激發了更多的想法和共鳴，同時確保它們符合客戶的期望。 有了更多確實的選擇，他再次與iOS開發人員會面，以確保從技術角度來看一切都符合要求。 \n Stage 4: Customer Feedback and Development 階段4：客戶的反饋和發展 \n When we landed on several, more finalized versions of the experience, the visual designer walked through them with the customer using Figma. The product manager and UX designer for Press Play provided feedback and guidance as well. 當我們找到了幾種最終確定的體驗版本時，視覺設計師使用Figma與客戶一起瀏覽了它們。 Press Play的產品經理和UX設計師也提供了反饋和指導。 \n Once they all learned what piqued the customer\'s interest, the visual designer set off to maximize the visuals and make them ready for development. He continued to work with the iOS developer to get the most out of the concept on a technical level. 一旦他們都了解了引起客戶興趣的東西，視覺設計師便著手使視覺效果最大化，並為開發做好準備。 他繼續與iOS開發人員合作，以在技術層面上充分利用該概念。 \n \n THE END RESULT 最終結果 \n Press Play\'s live drawing animation is an example of design collaboration at work; a team of cross-discipline experts working together to solve a design and development challenge with bigger implications. Without design collaboration, we wouldn\'t have discovered the ideal intersection of user experience, visual, and technical. Press Play的實時繪圖動畫是工作中設計協作的一個示例。一支跨學科專家團隊，共同解決具有更具含義的設計和開發挑戰。沒有設計協作，我們將找不到用戶體驗，視覺和技術之間的理想交匯處。 \n When the customer saw the animation alive in his app he called it "groundbreaking." 當客戶在他的應用程序中看到動畫生動時，他稱其為“開創性的”。 \n What’s more, the research, collaboration, and creation of this Press Play experience helped us discover a gap in the product’s user journey. Originally, the live drawing’s intent was to be a fun way to show the results to users. As we moved through the design process, we realized that if a user doesn’t watch the live drawing, and they lose, they don’t get to experience an end to their user journey for that drawing. 此外，對這種Press Play體驗的研究，協作和創造，幫助我們發現了產品用戶旅程中的突破口。最初，實時繪圖的目的是將結果顯示給用戶的一種有趣的方式。當我們在設計過程中，我們意識到，如果用戶不觀看實時圖形，而迷失了方向，那麼他們就不會體驗到該圖形的用戶旅程。 \n From that discovery, we decided to improve the app in a couple of other places as well. We added a results/live drawing element to the Winner’s Circle and a win-lose history section to the User Details side of the app. In the end, design collaboration empowered us to realize this unfulfilled need in the user experience. 基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們在“獲勝者圈”中添加了一個結果/實時繪圖元素，並在應用程序的“用戶詳細信息”端添加了“輸贏歷史記錄”部分。最後，設計協作使我們能夠實現用戶體驗中這一未滿足的需求。 \n Concluding Note 結論說明 \n It takes design collaboration to tackle the complex, crucial problems that come along with building great products and experiences. By leveraging the specialized expertise of multiple team members across disciplines, design collaboration makes sure teams meet challenges from all perspectives and come to better solutions. With the right mindset, tools, and process, design collaboration empowers teams to go deeper with creative thinking and iteration. 它需要設計協作來應對構建出色的產品和體驗所伴隨的複雜，關鍵的問題。 通過利用跨學科的多個團隊成員的專業知識，設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。 通過正確的思維方式，工具和流程，設計協作使團隊能夠通過創造性思維和共鳴來更深入。 \n We hope this guide gives you a good foundation from which you can build your own effective design collaboration process. You can learn more about design and product strategy on the Savvy blog, and feel free to contact us for help on the Savvy Apps website. 我們希望本指南為您提供一個良好的基礎，您可以以此為基礎建立自己的有效設計協作流程。 您可以在Savvy部落格上了解有關設計和產品策略的更多信息，也可以隨時在Savvy Apps網站上與我們聯繫以獲取幫助。 \n \n', 'tags': '', 'url': 'DigitalProductCollaboration.html'}, {'title': 'thoughts', 'text': '\xa0 \xa0 \xa0 \xa0  在協同合作時，首先我們要先有正確的思維方式，了解甚麼是協同合作、協同合作的重要性、以及彼此在協同合作時的心態。再來我們會需要一些好的工具去做協同設計(ex: FIGMA,MARVEL, etc)。在設計前了解我們要做甚麼樣的東西、東西的材料考量以及東西的用途也很重要。除此之外，我們還需要思考如何讓整個流程最佳化，除了使用對的工具外，對於設計過程中產生的變數進行實驗的順序也影響整個流程的流暢度。 \n', 'tags': '', 'url': 'thoughts.html'}, {'title': 'Group', 'text': 'week 3 \n \n week 4 \n \n week 7 \n \n', 'tags': '', 'url': 'Group.html'}]};